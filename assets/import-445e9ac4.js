import{j as v}from"./jszip.min-2e2e6be8.js";import{p as A,u as _,a as E,l as S,m,t as P}from"./storage-cb76c2d1.js";const g=(()=>{if(typeof self>"u")return!1;if("top"in self&&self!==top)try{}catch{return!1}return"showOpenFilePicker"in self})(),x=g?Promise.resolve().then(function(){return j}):Promise.resolve().then(function(){return z});async function L(...e){return(await x).default(...e)}g?Promise.resolve().then(function(){return I}):Promise.resolve().then(function(){return $});g?Promise.resolve().then(function(){return N}):Promise.resolve().then(function(){return D});const F=async e=>{const t=await e.getFile();return t.handle=e,t};var T=async(e=[{}])=>{Array.isArray(e)||(e=[e]);const t=[];e.forEach((a,i)=>{t[i]={description:a.description||"Files",accept:{}},a.mimeTypes?a.mimeTypes.map(s=>{t[i].accept[s]=a.extensions||[]}):t[i].accept["*/*"]=a.extensions||[]});const r=await window.showOpenFilePicker({id:e[0].id,startIn:e[0].startIn,types:t,multiple:e[0].multiple||!1,excludeAcceptAllOption:e[0].excludeAcceptAllOption||!1}),n=await Promise.all(r.map(F));return e[0].multiple?n:n[0]},j={__proto__:null,default:T};function w(e){function t(r){if(Object(r)!==r)return Promise.reject(new TypeError(r+" is not an object."));var n=r.done;return Promise.resolve(r.value).then(function(a){return{value:a,done:n}})}return w=function(r){this.s=r,this.n=r.next},w.prototype={s:null,n:null,next:function(){return t(this.n.apply(this.s,arguments))},return:function(r){var n=this.s.return;return n===void 0?Promise.resolve({value:r,done:!0}):t(n.apply(this.s,arguments))},throw:function(r){var n=this.s.return;return n===void 0?Promise.reject(r):t(n.apply(this.s,arguments))}},new w(e)}const k=async(e,t,r=e.name,n)=>{const a=[],i=[];var s,o=!1,c=!1;try{for(var u,l=function(p){var y,f,d,h=2;for(typeof Symbol<"u"&&(f=Symbol.asyncIterator,d=Symbol.iterator);h--;){if(f&&(y=p[f])!=null)return y.call(p);if(d&&(y=p[d])!=null)return new w(y.call(p));f="@@asyncIterator",d="@@iterator"}throw new TypeError("Object is not async iterable")}(e.values());o=!(u=await l.next()).done;o=!1){const p=u.value,y=`${r}/${p.name}`;p.kind==="file"?i.push(p.getFile().then(f=>(f.directoryHandle=e,f.handle=p,Object.defineProperty(f,"webkitRelativePath",{configurable:!0,enumerable:!0,get:()=>y})))):p.kind!=="directory"||!t||n&&n(p)||a.push(k(p,t,y,n))}}catch(p){c=!0,s=p}finally{try{o&&l.return!=null&&await l.return()}finally{if(c)throw s}}return[...(await Promise.all(a)).flat(),...await Promise.all(i)]};var O=async(e={})=>{e.recursive=e.recursive||!1,e.mode=e.mode||"read";const t=await window.showDirectoryPicker({id:e.id,startIn:e.startIn,mode:e.mode});return(await(await t.values()).next()).done?[t]:k(t,e.recursive,void 0,e.skipDirectory)},I={__proto__:null,default:O},R=async(e,t=[{}],r=null,n=!1,a=null)=>{Array.isArray(t)||(t=[t]),t[0].fileName=t[0].fileName||"Untitled";const i=[];let s=null;if(e instanceof Blob&&e.type?s=e.type:e.headers&&e.headers.get("content-type")&&(s=e.headers.get("content-type")),t.forEach((u,l)=>{i[l]={description:u.description||"Files",accept:{}},u.mimeTypes?(l===0&&s&&u.mimeTypes.push(s),u.mimeTypes.map(p=>{i[l].accept[p]=u.extensions||[]})):s?i[l].accept[s]=u.extensions||[]:i[l].accept["*/*"]=u.extensions||[]}),r)try{await r.getFile()}catch(u){if(r=null,n)throw u}const o=r||await window.showSaveFilePicker({suggestedName:t[0].fileName,id:t[0].id,startIn:t[0].startIn,types:i,excludeAcceptAllOption:t[0].excludeAcceptAllOption||!1});!r&&a&&a(o);const c=await o.createWritable();return"stream"in e?(await e.stream().pipeTo(c),o):"body"in e?(await e.body.pipeTo(c),o):(await c.write(await e),await c.close(),o)},N={__proto__:null,default:R},U=async(e=[{}])=>(Array.isArray(e)||(e=[e]),new Promise((t,r)=>{const n=document.createElement("input");n.type="file";const a=[...e.map(c=>c.mimeTypes||[]),...e.map(c=>c.extensions||[])].join();n.multiple=e[0].multiple||!1,n.accept=a||"",n.style.display="none",document.body.append(n);const i=c=>{typeof s=="function"&&s(),t(c)},s=e[0].legacySetup&&e[0].legacySetup(i,()=>s(r),n),o=()=>{window.removeEventListener("focus",o),n.remove()};n.addEventListener("click",()=>{window.addEventListener("focus",o)}),n.addEventListener("change",()=>{window.removeEventListener("focus",o),n.remove(),i(n.multiple?Array.from(n.files):n.files[0])}),"showPicker"in HTMLInputElement.prototype?n.showPicker():n.click()})),z={__proto__:null,default:U},W=async(e=[{}])=>(Array.isArray(e)||(e=[e]),e[0].recursive=e[0].recursive||!1,new Promise((t,r)=>{const n=document.createElement("input");n.type="file",n.webkitdirectory=!0;const a=s=>{typeof i=="function"&&i(),t(s)},i=e[0].legacySetup&&e[0].legacySetup(a,()=>i(r),n);n.addEventListener("change",()=>{let s=Array.from(n.files);e[0].recursive?e[0].recursive&&e[0].skipDirectory&&(s=s.filter(o=>o.webkitRelativePath.split("/").every(c=>!e[0].skipDirectory({name:c,kind:"directory"})))):s=s.filter(o=>o.webkitRelativePath.split("/").length===2),a(s)}),"showPicker"in HTMLInputElement.prototype?n.showPicker():n.click()})),$={__proto__:null,default:W},B=async(e,t={})=>{Array.isArray(t)&&(t=t[0]);const r=document.createElement("a");let n=e;"body"in e&&(n=await async function(s,o){const c=s.getReader(),u=new ReadableStream({start:y=>async function f(){return c.read().then(({done:d,value:h})=>{if(!d)return y.enqueue(h),f();y.close()})}()}),l=new Response(u),p=await l.blob();return c.releaseLock(),new Blob([p],{type:o})}(e.body,e.headers.get("content-type"))),r.download=t.fileName||"Untitled",r.href=URL.createObjectURL(await n);const a=()=>{typeof i=="function"&&i()},i=t.legacySetup&&t.legacySetup(a,()=>i(),r);return r.addEventListener("click",()=>{setTimeout(()=>URL.revokeObjectURL(r.href),3e4),a()}),r.click(),null},D={__proto__:null,default:B};const H=(e,t)=>e.length==t.length&&e.every((r,n)=>r==t[n]),Z=(e,t)=>H(new Uint8Array(e.slice(0,t.length)),t),q=new Uint8Array([80,75,3,4]),J=e=>Z(e,q),b=async e=>{const t=e.filter(i=>i.endsWith(".json"))[0],r=e.filter(i=>i.endsWith(".png"))[0];if(!t||!r)return!1;const n=JSON.parse(await t.async("string")),a=await r.async("arraybuffer");return await P(n,a),!0},G=async()=>{const t=(await L({multiple:!0,mimeTypes:["application/zip"]})).filter(n=>n.name.endsWith(".zip"));if(t.length==0){m.warning("没有发现可导入文件");return}let r=0;t.length>0&&await Promise.any(t.map(async n=>{const a=await v.loadAsync(n);await b(a)&&r++;const i=a.filter(s=>s.endsWith(".zip"));i.length>0&&await Promise.any(i.map(async s=>{const o=await v.loadAsync(s.async("blob"));await b(o)&&r++}))})),r>0?m.success(`导入${r}条记录`):m.warning("没有发现可导入记录")},K=async(e=[])=>{if(typeof e=="string"&&(e=[e]),e.length==0)return;e=[...new Set(e)];const t=A(2);let r=0;const n=await Promise.allSettled(e.map(a=>t(async()=>{const i=_[a];if(i){const l=await E.getItem(i);if(l)return r++,l}const o=await(await S(a,void 0,{proxy:!0}).catch(l=>{throw m.error(`网络异常: ${new URL(a).host}/${l.message||""}`),console.warn(["download failed",a,l]),l})).arrayBuffer();let c,u;if(J(o)){const l=await v.loadAsync(o),[p]=l.filter(f=>f.endsWith(".json")),[y]=l.filter(f=>f.endsWith(".png"));if(!p||!y)return;u=await y.async("arraybuffer"),c=JSON.parse(await p.async("string"))}else throw new Error("file must be png or zip");return await P(c,u),r++,c})));return r==0?m.warning("没有发现可导入记录"):r==e.length?m.success(`导入${r}条快照`):r<e.length&&m.success(`导入${r}条快照，失败${e.length-r}`),n};export{K as a,G as i};
//# sourceMappingURL=import-445e9ac4.js.map
